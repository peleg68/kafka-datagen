version: '3'
networks:
  kafka:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka
  
  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    expose:
      - 9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "datagen:1:1" 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka
  
  datagen:
    image: kafka-datagen:latest
    depends_on:
      - kafka
    environment:
      DRY_RUN: 'false'
      BOOTSTRAP_SERVERS: kafka:9092
      WAIT_TIME: 5000
    networks:
      - kafka

  minio-setup:
    image: minio/mc
    container_name: minio-setup
    environment:
        - MC_HOST_lakefs=http://minioadmin:minioadmin@minio:9000
    depends_on:
      - minio
    command: ["mb", "lakefs/example"]

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    entrypoint: ["minio", "server", "/data", "--console-address", ":9001"]

  mariadb:
    image: mariadb:10
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: metastore_db

  hive-metastore:
    build: hive
    container_name: hive
    depends_on:
      - mariadb
    ports:
      - 9083:9083
    environment:
      - DB_URI=mariadb:3306
    volumes:
      - ./etc/hive-site.xml:/opt/apache-hive-bin/conf/hive-site.xml

  hive-server:
    build: hive
    container_name: hiveserver2
    depends_on:
      - hive-metastore
    environment:
      - DB_URI=mariadb:3306
    volumes:
      - ./etc/hive-site.xml:/opt/apache-hive-bin/conf/hive-site.xml
    entrypoint: ["hive", "--service", "hiveserver2", "--hiveconf", "hive.root.logger=INFO,console"]
  
  hive-client:
    build: hive
    profiles: ["client"]
    entrypoint: ["beeline", "-u", "jdbc:hive2://hiveserver2:10000"]
  
  trino:
    image: trinodb/trino:358
    container_name: trino
    volumes:
      - ./etc/s3.properties:/etc/trino/catalog/s3.properties

  trino-client:
    image: trinodb/trino:358
    profiles: ["client"]
    entrypoint: ["trino", "--server", "trino:8080", "--catalog", "s3", "--schema", "default"]
  
  secor:
    image: peleg686/secor:master
    depends_on:
      - kafka
      - zookeeper
      - minio
      - minio-setup
    environment:
      CONFIG_FILE: /opt/secor/config/secor.kubernetes-prod.backup.properties
      LOG4J_CONFIGURATION: /opt/secor/config/log4j.docker.properties
      ZOOKEEPER_QUORUM: zookeeper:2181
      ZOOKEEPER_PATH: secor
    volumes:
      - ./secor:/opt/secor/config
      - ./secor_data/message_logs/backup:/mnt/secor_data/message_logs/backup
      - ./secor_data/message_logs/partition:/mnt/secor_data/message_logs/partition
    networks:
      - kafka

